_______________________________________________________________________________ WEEK 1
--------------------------------------1.1. Overview

working with links and position elements
eg- align buttons- flexbox
   - multipage website
   - link to a section of a page
   - create a link to an email client
   - css variables

--------------------------------------1.2- html links

--------------------------------------1.3- advanced html links


SNIPPRTS

--link
----link to another website or page on website
<a href="https://www.shecodes.io/">SheCodes</a>
<a href="https://www.shecodes.io/" target="_blank">SheCodes</a>
<a href="https://www.shecodes.io/" target="_blank" title="SheCodes Website">SheCodes</a>

--anchor link 
----links to a section on the same page
<a href="#important">
  Jump to the heading below
</a>

<div id="important">
  This is a note
</div>

--Mailto link
<a href="mailto:team@shecodes.io">Send us an email</a>

--Pseudo-classes selector
/* Any button over which the user's pointer is hovering */
button:hover {
  color: blue;
}

/* Applied when the user has already visited the link */
a:visited {
  color: red;
}


--------------------------------------1.4- css variables
minimizing changes being made in different places.

variable= box where we store info

:root      = pseudo selector at top of css document
   --    (two dashes infront of the variable)

SNIPPETS
:root {
  --main-branding-color: #885df1;
}

h1 {
  color: var(--main-branding-color);
}

--------------------------------------1.5- advanced flexbox
1. first thing to do- make display flexbox
    

SNIPPETS
- flexbox

.container {
   display: flex;
   flex-direction: row | row-reverse | column | column-reverse; /* optional */
   justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right; /* optional */
   flex-direction: row | column; /* optional */
}

-------align items within container horizontally

links
flexbox explanation
https://css-tricks.com/snippets/css/a-guide-to-flexbox/

flexbox documentation
https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox


_______________________________________________________________________________ WEEK 2
---------------------------------------------------1 Overview
1.- Overview
2. Bootstrap
3. CSS Utility classes
4. Responsive Gride
5. Responsive Images
6. Responsive Navigation
7. Summary
HOMEWORK

---------------------------------------------------2 Bootstrap
Install and use grid and components with bootstrap

Using bootstrap grid system

- content must be inside a div called container---- <div class="container"></div>
elements to create columns within rows <div class="row"></div>
- put content into columns within the rows
         <div class="col">
                SheCodes
            </div>
            <div class="col">
                SheCodes+
            </div>

--can specify number of columns
    <div class="col-3"></div>

SNIPPETS

--import Bootstrap
<html>
<head>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
</head>
<body>
  <div class="container">
    <!-- Content here -->
  </div>
</body>
</html>

--equal column width Gride
<div class="container">
  <div class="row">
    <div class="col">
      1 of 2
    </div>
    <div class="col">
      2 of 2
    </div>
  </div>
  <div class="row">
    <div class="col">
      1 of 3
    </div>
    <div class="col">
      2 of 3
    </div>
    <div class="col">
      3 of 3
    </div>
  </div>
</div>

--Auto- layout columns Grid
<div class="container">
  <div class="row">
    <div class="col-8">col-8</div>
    <div class="col-4">col-4</div>
  </div>
</div>

--Standard buttons
<button type="button" class="btn btn-primary">Primary</button>
<button type="button" class="btn btn-secondary">Secondary</button>
<button type="button" class="btn btn-success">Success</button>
<button type="button" class="btn btn-danger">Danger</button>
<button type="button" class="btn btn-warning">Warning</button>
<button type="button" class="btn btn-info">Info</button>
<button type="button" class="btn btn-light">Light</button>
<button type="button" class="btn btn-dark">Dark</button>
<button type="button" class="btn btn-link">Link</button>

--simple card
<div class="card">
  <div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

--Colours
<p class="text-primary">.text-primary</p>
<p class="text-secondary">.text-secondary</p>
<p class="text-success">.text-success</p>
<p class="text-danger">.text-danger</p>
<p class="text-warning bg-dark">.text-warning</p>
<p class="text-info bg-dark">.text-info</p>
<p class="text-light bg-dark">.text-light</p>
<p class="text-dark">.text-dark</p>
<p class="text-body">.text-body</p>
<p class="text-muted">.text-muted</p>
<p class="text-white bg-dark">.text-white</p>

--Borders
<span class="border"></span>
<span class="border-top"></span>
<span class="border-end"></span>
<span class="border-bottom"></span>
<span class="border-start"></span>

--Margin
<div class="m-0">
  No margin
</div>
<div class="mt-5">
  Large margin top
</div>
<div class="mt-5 mr-5">
  Large margin top and right
</div>
<div class="m-5">
  Large margin
</div>
<div class="m-3 ml-1">
  Medium margin and small margin left
</div>

--Padding
<div class="p-0">
  No padding
</div>
<div class="pt-5">
  Large padding top
</div>
<div class="pt-5 pr-5">
  Large padding top and right
</div>
<div class="p-5">
  Large padding
</div>
<div class="p-3 pl-1">
  Medium padding and small padding left
</div>

--Shadows
<div class="shadow-none">No shadow</div>
<div class="shadow-sm">Small shadow</div>
<div class="shadow">Regular shadow</div>
<div class="shadow-lg">Larger shadow</div>

--Background
<div class="p-3 mb-2 bg-primary text-white">.bg-primary</div>
<div class="p-3 mb-2 bg-secondary text-white">.bg-secondary</div>
<div class="p-3 mb-2 bg-success text-white">.bg-success</div>
<div class="p-3 mb-2 bg-danger text-white">.bg-danger</div>
<div class="p-3 mb-2 bg-warning text-dark">.bg-warning</div>
<div class="p-3 mb-2 bg-info text-dark">.bg-info</div>
<div class="p-3 mb-2 bg-light text-dark">.bg-light</div>
<div class="p-3 mb-2 bg-dark text-white">.bg-dark</div>
<div class="p-3 mb-2 bg-body text-dark">.bg-body</div>
<div class="p-3 mb-2 bg-white text-dark">.bg-white</div>
<div class="p-3 mb-2 bg-transparent text-dark">.bg-transparent</div>

----links
-using Bootstrap Grids
https://getbootstrap.com/docs/5.3/layout/grid/#example

-Bootstrap
https://getbootstrap.com/


---------------------------------------------------3 CSS Utility classes
make htmlhow you want it without using css- good for prototyping- also quicker

--custom classes
set up the behaviour of the classes in the css file    eg
.center {
    text-align: center;
}
- now whenever class of center- that wil be center aligned

--bootstrap classes
bootstrap have lots of own classes
eg
<h1 class="border border-5"> A Title with a border</h1>




SNIPPETS

--class selector

/* All elements with class="spacious" */
.spacious {
  margin: 20px;
}

/* All <li> elements with class="spacious" */
li.spacious {
  margin: 20px;
}

/* All <li> elements with a class list that includes both "spacious" and "elegant" */
/* For example, class="elegant retro spacious" */
li.spacious.elegant {
  margin: 20px;
}

/* All <li> elements OR All elements with class="spacious" */
li, .spacious {
  margin: 20px;
}

--Borders
<span class="border"></span>
<span class="border-top"></span>
<span class="border-end"></span>
<span class="border-bottom"></span>
<span class="border-start"></span>

--Colours
<p class="text-primary">.text-primary</p>
<p class="text-secondary">.text-secondary</p>
<p class="text-success">.text-success</p>
<p class="text-danger">.text-danger</p>
<p class="text-warning bg-dark">.text-warning</p>
<p class="text-info bg-dark">.text-info</p>
<p class="text-light bg-dark">.text-light</p>
<p class="text-dark">.text-dark</p>
<p class="text-body">.text-body</p>
<p class="text-muted">.text-muted</p>
<p class="text-white bg-dark">.text-white</p>

--Display property
<div class="d-inline">
  display inline
</div>
<span class="d-block">
  display block
</span>
<span class="d-flex">
  display flex
</span>
<span class="d-none">
  display none
</span>
<div class="d-none d-lg-block">
  Visible on large screens, hidden on smaller resolutions
</div>

--Shadows
<div class="shadow-none">No shadow</div>
<div class="shadow-sm">Small shadow</div>
<div class="shadow">Regular shadow</div>
<div class="shadow-lg">Larger shadow</div>

--Margin
<div class="m-0">
  No margin
</div>
<div class="mt-5">
  Large margin top
</div>
<div class="mt-5 mr-5">
  Large margin top and right
</div>
<div class="m-5">
  Large margin
</div>
<div class="m-3 ml-1">
  Medium margin and small margin left
</div>

--Padding
<div class="p-0">
  No padding
</div>
<div class="pt-5">
  Large padding top
</div>
<div class="pt-5 pr-5">
  Large padding top and right
</div>
<div class="p-5">
  Large padding
</div>
<div class="p-3 pl-1">
  Medium padding and small padding left
</div>

--Text
<p class="text-center">Center aligned text</p>
<p class="text-end">End aligned text</p>
<p class="text-lowercase">Lowercased text.</p>
<p class="text-uppercase">Uppercased text.</p>
<p class="text-capitalize">CapiTaliZed text.</p>
<p class="fw-bold">Bold text.</p>
<p class="text-decoration-underline">This text has a line underneath it.</p>
<p class="text-decoration-line-through">This text has a line going through it.</p>
<a href="#" class="text-decoration-none">This link has its text decoration removed</a>


---------------------------------------------------4 Responsive Grids
difference between flexbox and grid method

flexbox- can use with bootstrap
wrap each element inside a div and wrap in <div class="d-flex justify-content-evenly">

add column number detail for differing screen sizes of screeb


SNIPPETS

--Justify Content
<div class="d-flex justify-content-start">...</div>
<div class="d-flex justify-content-end">...</div>
<div class="d-flex justify-content-center">...</div>
<div class="d-flex justify-content-between">...</div>
<div class="d-flex justify-content-around">...</div>
<div class="d-flex justify-content-evenly">...</div>

-- Auto-layout columns grid
<div class="container">
  <div class="row">
    <div class="col-8">col-8</div>
    <div class="col-4">col-4</div>
  </div>
</div>

-- Responsive Grid
<div class="row">
    <div class="col-sm-3 col-md-6">Hello</div>
    <div class="col-sm-3 col-md-6">Hello</div>
    <div class="col-sm-3 col-md-6">Hello</div>
    <div class="col-sm-3 col-md-6">Hello</div>
</div>

---------------------------------------------------5 Responsive Images

-without bootstrap

SNIPPETS

--Responsive Image
img {
  max-width: 100%;
  height: auto;
}

--Responsive Image

<img src="..." class="img-fluid" alt="...">


---------------------------------------------------6 Responsive Navigation


SNIPPETS

--responsive Navigation
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Features</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Pricing</a>
        </li>
      </ul>
    </div>
  </div>
</nav>


______________________________________________________________________________________  WEEK 3
----------------------------------------------------- 1- Overview
1- Overview
2- Responsive Testing
3- CSS Media Queries
4- Live Server
5- Multiple Page Hosting
6- SEO
7- Summary
8- Homework

----------------------------------------------------- 2- Responsive Testing
Using developer tools to view website on different devices/ resolution

can select different devices

can view in portrait and landscape mode

Responsive mode- drag side to side to change sizes

can still change dev tools within differing modes

can simulate better or poor internet

-----Link
--Mobile Device Mode

https://developer.chrome.com/docs/devtools/device-mode/


----------------------------------------------------- 3- CSS Media Queries

Used to apply css only on specific screen resolutions
eg- only apply this css when the screen is x-pixels

look at/ check device breakpoints

Can also hide things on mobile devices

put at bottom of css file

bootstrap also has css utility classes that can be used to hide elements
--eg
<h6 class="d-none d-sm--block>This uses bootstrap utility classes to show/hide</h6>

SNIPPETS
--Media Queries

@media (max-width: 900px) {
  h1 {
    font-size: 18px;
    text-align: center;
  }

  .footer {
    display: none;
  }
}

@media (min-width: 900px) {
  h1 {
    color: red;
  }
}

--Display Property

<div class="d-inline">
  display inline
</div>
<span class="d-block">
  display block
</span>
<span class="d-flex">
  display flex
</span>
<span class="d-none">
  display none
</span>
<div class="d-none d-lg-block">
  Visible on large screens, hidden on smaller resolutions
</div>


----------------------------------------------------- 4- Live Server

switch on --- bottom right,   go live,    opens new tab
website is live

shows changes immediatly without reload of page

replicates a server eg like netlify etc--- only use for static websites

-- file paths
- can use absolute paths instead of relative paths
  /= go to root of website

----------------------------------------------------5- multiple page Hosting
host multi pge website on netlify et al

make repo (vscode)
create index.html    Homepage
start server

----------------------------------------------------6- SEO
Search Engine Optimisation
- give page title- shows at top of tab- google looks at title and infers content of page

eg   sheCodes    not great as only brand- no clues for goole as to the content
     better
  include keywords as to page content  

meta tag- includes a description of the site content- short and keywords

seo friendly
- have only one h1 on the page- doesn't have to be largest but does need to be there.

- can have as many subheadings as like

-links
ensure link text has context so google can interpret the destination of the link

include a title within a link (can be seen on hover) adds more context

-Images
ensure alt text

ca put google analytics in head






SNIPPETS

-Title element
-- Determine the document's title that will be shown in a browser’s title bar or a page's tab More info
<title>The title of your website - Brand</title>

-Meta description

<head>  
  <meta name="description"  content="This is an example of a meta description. This will often show up in search results." />
</head>


- Image
<img src="https://s3.amazonaws.com/shecodesio-production/uploads/files/000/083/182/original/cat.png?1685030491" />
<img src="https://s3.amazonaws.com/shecodesio-production/uploads/files/000/083/182/original/cat.png?1685030491" alt="Image description" />
<img src="https://s3.amazonaws.com/shecodesio-production/uploads/files/000/083/182/original/cat.png?1685030491" alt="Image description" width="400" />


- Link
<a href="https://www.shecodes.io/">SheCodes</a>
<a href="https://www.shecodes.io/" target="_blank">SheCodes</a>
<a href="https://www.shecodes.io/" target="_blank" title="SheCodes Website">SheCodes</a>

--adds a link to a page


links

-install google analytics
https://analytics.google.com/analytics/web/provision/#/provision

-website seo checker- free audit and analysis
https://chromewebstore.google.com/detail/website-seo-checker-free/nljcdkjpjnhlilgepggmmagnmebhadnk?hl=en

-keep your website fast- google speed insights
https://pagespeed.web.dev/?utm_source=psi&utm_medium=redirect


__________________________________________________________WEEK 4

-----------------------------------------4.1 Overview
1- Overview
2- Portfolio Project Wireframe
3- portfolio project user interface
4- Figma
5- Figma Dev Mode
6- Portfolio project set-up
7- Portfolio project / git+
8- Portfolio project/ Homepage
9- Portfolio Project / Homepage content
10- Summary
HOMEWORK- responsive homepage hosted online

---------------------------------------4.2 Portfolio Project Wireframe
creation of wireframes
a basic sketch/ structure of website

link
- invision freehand
https://projects.invisionapp.com/freehand/new


-----------------------------------------4.3 Portfolio Project / User interface


links
--Portfolio examole
https://benadam.me/

--Portfolio example
https://sebkay.com/


